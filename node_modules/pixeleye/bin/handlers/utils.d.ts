/// <reference types="node" />
import { APIType } from "@pixeleye/cli-api";
import { Build } from "@pixeleye/api";
export declare const getExitBuild: (api: APIType, buildID: string) => (err: any) => Promise<never>;
export declare function watchExit(callback: () => Promise<any>): void;
export declare const startBooth: ({ buildID, token, endpoint, boothPort, }: {
    buildID: string;
    token: string;
    endpoint?: string;
    boothPort?: string;
}) => Promise<import("child_process").ChildProcess>;
export declare const waitForProcessing: ({ boothPort, }: {
    boothPort: string;
}) => Promise<void>;
export declare function splitIntoChunks<T>(array: T[], chunkSize: number): T[][];
export declare function waitForBuildResult(token: string, build: Build, endpoint?: string): Promise<Build["status"]>;
//# sourceMappingURL=utils.d.ts.map