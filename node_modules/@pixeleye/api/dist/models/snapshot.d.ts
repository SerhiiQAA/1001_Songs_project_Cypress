import { z } from "zod";
export declare const SnapshotZod: z.ZodObject<{
    id: z.ZodString;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
    buildID: z.ZodString;
    snapID: z.ZodString;
    name: z.ZodString;
    variant: z.ZodOptional<z.ZodString>;
    target: z.ZodOptional<z.ZodString>;
    targetIcon: z.ZodOptional<z.ZodString>;
    viewport: z.ZodOptional<z.ZodString>;
    error: z.ZodOptional<z.ZodString>;
    baselineID: z.ZodOptional<z.ZodString>;
    reviewerID: z.ZodOptional<z.ZodString>;
    reviewAt: z.ZodOptional<z.ZodString>;
    status: z.ZodEnum<["processing", "failed", "aborted", "approved", "rejected", "unreviewed", "unchanged", "orphaned", "missing_baseline"]>;
}, "strip", z.ZodTypeAny, {
    id: string;
    createdAt: string;
    updatedAt: string;
    status: "aborted" | "processing" | "failed" | "orphaned" | "approved" | "rejected" | "unreviewed" | "unchanged" | "missing_baseline";
    name: string;
    buildID: string;
    snapID: string;
    variant?: string | undefined;
    target?: string | undefined;
    targetIcon?: string | undefined;
    viewport?: string | undefined;
    error?: string | undefined;
    baselineID?: string | undefined;
    reviewerID?: string | undefined;
    reviewAt?: string | undefined;
}, {
    id: string;
    createdAt: string;
    updatedAt: string;
    status: "aborted" | "processing" | "failed" | "orphaned" | "approved" | "rejected" | "unreviewed" | "unchanged" | "missing_baseline";
    name: string;
    buildID: string;
    snapID: string;
    variant?: string | undefined;
    target?: string | undefined;
    targetIcon?: string | undefined;
    viewport?: string | undefined;
    error?: string | undefined;
    baselineID?: string | undefined;
    reviewerID?: string | undefined;
    reviewAt?: string | undefined;
}>;
export type Snapshot = z.infer<typeof SnapshotZod>;
export type PartialSnapshot = Pick<Snapshot, "snapID" | "name" | "variant" | "target" | "viewport" | "targetIcon">;
export declare const SnapshotPairZod: z.ZodObject<{
    id: z.ZodString;
    createdAt: z.ZodString;
    updatedAt: z.ZodString;
    status: z.ZodEnum<["processing", "failed", "aborted", "approved", "rejected", "unreviewed", "unchanged", "orphaned", "missing_baseline"]>;
    error: z.ZodOptional<z.ZodString>;
    name: z.ZodString;
    buildID: z.ZodString;
    snapID: z.ZodString;
    variant: z.ZodOptional<z.ZodString>;
    target: z.ZodOptional<z.ZodString>;
    targetIcon: z.ZodOptional<z.ZodString>;
    viewport: z.ZodOptional<z.ZodString>;
    baselineID: z.ZodOptional<z.ZodString>;
    reviewerID: z.ZodOptional<z.ZodString>;
    reviewAt: z.ZodOptional<z.ZodString>;
    snapHash: z.ZodOptional<z.ZodString>;
    snapURL: z.ZodOptional<z.ZodString>;
    snapHeight: z.ZodOptional<z.ZodNumber>;
    snapWidth: z.ZodOptional<z.ZodNumber>;
    baselineHash: z.ZodOptional<z.ZodString>;
    baselineURL: z.ZodOptional<z.ZodString>;
    baselineHeight: z.ZodOptional<z.ZodNumber>;
    baselineWidth: z.ZodOptional<z.ZodNumber>;
    diffHash: z.ZodOptional<z.ZodString>;
    diffURL: z.ZodOptional<z.ZodString>;
    diffHeight: z.ZodOptional<z.ZodNumber>;
    diffWidth: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    id: string;
    createdAt: string;
    updatedAt: string;
    status: "aborted" | "processing" | "failed" | "orphaned" | "approved" | "rejected" | "unreviewed" | "unchanged" | "missing_baseline";
    name: string;
    buildID: string;
    snapID: string;
    error?: string | undefined;
    variant?: string | undefined;
    target?: string | undefined;
    targetIcon?: string | undefined;
    viewport?: string | undefined;
    baselineID?: string | undefined;
    reviewerID?: string | undefined;
    reviewAt?: string | undefined;
    snapHash?: string | undefined;
    snapURL?: string | undefined;
    snapHeight?: number | undefined;
    snapWidth?: number | undefined;
    baselineHash?: string | undefined;
    baselineURL?: string | undefined;
    baselineHeight?: number | undefined;
    baselineWidth?: number | undefined;
    diffHash?: string | undefined;
    diffURL?: string | undefined;
    diffHeight?: number | undefined;
    diffWidth?: number | undefined;
}, {
    id: string;
    createdAt: string;
    updatedAt: string;
    status: "aborted" | "processing" | "failed" | "orphaned" | "approved" | "rejected" | "unreviewed" | "unchanged" | "missing_baseline";
    name: string;
    buildID: string;
    snapID: string;
    error?: string | undefined;
    variant?: string | undefined;
    target?: string | undefined;
    targetIcon?: string | undefined;
    viewport?: string | undefined;
    baselineID?: string | undefined;
    reviewerID?: string | undefined;
    reviewAt?: string | undefined;
    snapHash?: string | undefined;
    snapURL?: string | undefined;
    snapHeight?: number | undefined;
    snapWidth?: number | undefined;
    baselineHash?: string | undefined;
    baselineURL?: string | undefined;
    baselineHeight?: number | undefined;
    baselineWidth?: number | undefined;
    diffHash?: string | undefined;
    diffURL?: string | undefined;
    diffHeight?: number | undefined;
    diffWidth?: number | undefined;
}>;
export type SnapshotPair = z.infer<typeof SnapshotPairZod>;
//# sourceMappingURL=snapshot.d.ts.map