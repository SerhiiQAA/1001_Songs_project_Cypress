{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2024-08-05T10:29:50.253Z",
    "end": "2024-08-05T10:29:50.636Z",
    "duration": 383,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b5687db9-ad43-4ccf-9853-ce7ce046d4b6",
      "title": "",
      "fullFile": "cypress/e2e/API/Expedition/Get All Categories.cy.js",
      "file": "cypress/e2e/API/Expedition/Get All Categories.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7b5da49d-89d2-4a60-b81f-8ec8201ccf9d",
          "title": "Swagger Responses Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should validate the response body",
              "fullTitle": "Swagger Responses Test should validate the response body",
              "timedOut": null,
              "duration": 325,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'https://1000and1songs.com/api/v1/expedition/categories'\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('title', 'Експедиції');\n  expect(response.body).to.have.property('description').that.is.a('string');\n  expect(response.body).to.have.property('categories').that.is.an('array');\n  // Check the availability of each category\n  const expectedCategories = ['Розвідка', 'Статичний', 'Міждисциплінарна', 'Тематична', 'Відеозапис обряду', 'Цифровий запис'];\n  response.body.categories.forEach(category => {\n    expect(expectedCategories).to.include(category.name);\n  });\n});",
              "err": {
                "message": "AssertionError: expected [ Array(6) ] to include 'Стаціонарна'",
                "estack": "AssertionError: expected [ Array(6) ] to include 'Стаціонарна'\n    at eval (webpack://1001_songs_cypress/./cypress/e2e/API/Expedition/Get All Categories.cy.js:22:38)\n    at Context.eval (webpack://1001_songs_cypress/./cypress/e2e/API/Expedition/Get All Categories.cy.js:21:31)",
                "diff": null
              },
              "uuid": "5862ca96-a9f6-4442-8ec0-097486d2dc86",
              "parentUUID": "7b5da49d-89d2-4a60-b81f-8ec8201ccf9d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5862ca96-a9f6-4442-8ec0-097486d2dc86"
          ],
          "pending": [],
          "skipped": [],
          "duration": 325,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "reportPageTitle": "custom-title",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "saveAllAttempts": false,
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/reports/html/.jsons"
      },
      "version": "6.2.0"
    }
  }
}