{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-08-05T10:29:55.950Z",
    "end": "2024-08-05T10:29:56.190Z",
    "duration": 240,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d388ba63-3815-4916-83a3-9c361e209ddc",
      "title": "",
      "fullFile": "cypress/e2e/API/Expedition/Get Expeditions List By Category.cy.js",
      "file": "cypress/e2e/API/Expedition/Get Expeditions List By Category.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cef4b759-fa47-4037-83a3-18ed54962e5f",
          "title": "API Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return valid response from the API",
              "fullTitle": "API Tests should return valid response from the API",
              "timedOut": null,
              "duration": 206,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('GET', 'https://1000and1songs.com/api/v1/expedition/filter') // Replace with your actual API endpoint\n.then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.not.be.null;\n  expect(response.body).to.have.property('items').that.is.an('array');\n  expect(response.body.items[0]).to.have.property('id').that.is.a('number');\n  expect(response.body.items[0]).to.have.property('title').that.is.a('string');\n  expect(response.body.items[0]).to.have.property('location').that.is.a('string');\n  expect(response.body.items[0]).to.have.property('short_description').that.is.a('string');\n  expect(response.body.items[0]).to.have.property('expedition_date').that.matches(/\\d{4}-\\d{2}-\\d{2}/);\n  expect(response.body.items[0]).to.have.property('preview_photo').that.is.a('string');\n  expect(response.body).to.have.property('total').that.is.a('number');\n  expect(response.body).to.have.property('page').that.is.a('number');\n  expect(response.body).to.have.property('size').that.is.a('number');\n  expect(response.body).to.have.property('pages').that.is.a('number');\n});",
              "err": {},
              "uuid": "38b57a33-8d22-4b6a-8980-27b3a8fca4ae",
              "parentUUID": "cef4b759-fa47-4037-83a3-18ed54962e5f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "38b57a33-8d22-4b6a-8980-27b3a8fca4ae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 206,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "reportPageTitle": "custom-title",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "saveAllAttempts": false,
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/reports/html/.jsons"
      },
      "version": "6.2.0"
    }
  }
}