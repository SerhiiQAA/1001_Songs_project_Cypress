{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2024-08-20T09:45:13.157Z",
    "end": "2024-08-20T09:45:13.464Z",
    "duration": 307,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b1845a56-c7a5-4b50-b09b-22107cae508a",
      "title": "",
      "fullFile": "cypress/e2e/API/Map/Filter_Song_Geotags.cy.js",
      "file": "cypress/e2e/API/Map/Filter_Song_Geotags.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fd0223aa-af1a-4f8c-9085-4eb457152130",
          "title": "Get Filter Song Geotags",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "method get response code should be  200",
              "fullTitle": "Get Filter Song Geotags method get response code should be  200",
              "timedOut": null,
              "duration": 252,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request('https://1000and1songs.com/api/v1/map/filter/geotag').then(response => {\n  expect(response).to.have.property('status', 200);\n  expect(response.body).to.not.be.null;\n  response.body.forEach(geotag => {\n    expect(geotag).to.have.all.keys('id', 'city', 'latitude', \"longitude\", \"song_count\");\n  });\n});",
              "err": {
                "message": "AssertionError: expected { Object (id, city, ...) } to have keys 'id', 'city', 'latitude', 'longitude', and 'song_count'",
                "estack": "AssertionError: expected { Object (id, city, ...) } to have keys 'id', 'city', 'latitude', 'longitude', and 'song_count'\n    at eval (webpack://1001_songs_cypress/./cypress/e2e/API/Map/Filter_Song_Geotags.cy.js:7:39)\n    at Context.eval (webpack://1001_songs_cypress/./cypress/e2e/API/Map/Filter_Song_Geotags.cy.js:6:22)",
                "diff": "- [ 'city', 'id', 'latitude', 'longitude', 'photo', 'song_count' ]\n+ [ 'city', 'id', 'latitude', 'longitude', 'song_count' ]\n"
              },
              "uuid": "b0228786-0842-45ab-9528-dba05fdcd9a4",
              "parentUUID": "fd0223aa-af1a-4f8c-9085-4eb457152130",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b0228786-0842-45ab-9528-dba05fdcd9a4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 252,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "reportPageTitle": "custom-title",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "saveAllAttempts": false,
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/reports/html/.jsons"
      },
      "version": "6.2.0"
    }
  }
}